upstream unicorn_<%= fetch(:nginx_config_name) %> {
<% if fetch(:unicorn_use_tcp) %>
  <% roles(:app).each do |role| %>
    server <%= role.hostname %>:<%= fetch(:unicorn_tcp_listen_port)%> fail_timeout=<%= fetch(:nginx_fail_timeout) %>;
  <% end %>
<% else %>
  server unix:/tmp/unicorn.<%= fetch(:nginx_config_name) %>.sock fail_timeout=<%= fetch(:nginx_fail_timeout) %>;
<% end %>
}

<% if fetch(:nginx_use_ssl) %>
server {
  listen <?= fetch(:nginx_http_port) ?>;
  server_name <%= fetch(:nginx_server_name) %>;
  rewrite ^(.*) https://$host$1<%= ( fetch(:nginx_https_port)==443 ? "" : (":#{fetch(:nginx_https_port)}") ) %> permanent;
}
<% end %>

<% # render the default server directive. If SSL is enabled, port :nginx_https_port is used %>
<%= template_to_s("_default_server_directive.erb", nginx_pass_ssl_client_cert: false).to_s %>

<% if fetch(:nginx_pass_ssl_client_cert) %>
<% # render the server directive with SSL client certificate authentication enabled on port :nginx_https_port+1 %>
<%= template_to_s("_default_server_directive.erb", nginx_pass_ssl_client_cert: true).to_s %>
<% end %>
